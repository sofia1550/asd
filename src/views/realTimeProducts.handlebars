<!DOCTYPE html>
<html>
<head>
    <title>Productos en Tiempo Real</title>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>

    <!-- Formulario para agregar productos -->
    <form id="addProductForm">
        <input type="text" id="title" placeholder="Título del producto" required />
        <input type="text" id="description" placeholder="Descripción del producto" required />
        <input type="text" id="code" placeholder="Código del producto" required />
        <input type="number" id="price" placeholder="Precio" required />
        <input type="number" id="stock" placeholder="Stock" required />
        <input type="text" id="category" placeholder="Categoría" required />
        <button type="submit">Agregar Producto</button>
    </form>

    <!-- Formulario de edición oculto -->
    <div id="editForm" style="display: none;">
        <input type="text" id="editTitle" placeholder="Título del producto" required />
        <input type="number" id="editPrice" placeholder="Precio" required />
        <button onclick="submitEdit()">Guardar Cambios</button>
    </div>

    <ul id="productList">
        <!-- Los productos se añadirán aquí dinámicamente -->
    </ul>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        function loadProducts() {
            fetch('/api/products')
                .then(response => response.json())
                .then(products => {
                    const productList = document.getElementById('productList');
                    productList.innerHTML = '';
                    products.forEach(product => {
                        productList.innerHTML += `<li>
                            ${product.title} - ${product.price} 
                            <button onclick="editProduct('${product._id}', '${product.title}', ${product.price})">Editar</button> 
                            <button onclick="deleteProduct('${product._id}')">Eliminar</button> 
                        </li>`;
                    });
                });
        }

        function editProduct(id, title, price) {
            document.getElementById('editForm').style.display = 'block';
            document.getElementById('editTitle').value = title;
            document.getElementById('editPrice').value = price;
            document.getElementById('editForm').dataset.productId = id;
        }

        function submitEdit() {
            const id = document.getElementById('editForm').dataset.productId;
            const updatedTitle = document.getElementById('editTitle').value;
            const updatedPrice = parseFloat(document.getElementById('editPrice').value);

            fetch(`/api/products/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title: updatedTitle, price: updatedPrice })
            }).then(response => {
                if (!response.ok) {
                    throw new Error('Error al actualizar el producto');
                }
                return response.json();
            }).then(() => {
                document.getElementById('editForm').style.display = 'none';
                loadProducts();
            }).catch(error => {
                console.error('Hubo un problema con la solicitud de edición:', error);
            });
        }




        function deleteProduct(id) {
            fetch(`/api/products/${id}`, { method: 'DELETE' })
                .then(() => loadProducts());
        }

        document.getElementById('addProductForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const newProduct = {
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                code: document.getElementById('code').value,
                price: parseFloat(document.getElementById('price').value),
                stock: parseInt(document.getElementById('stock').value),
                category: document.getElementById('category').value,
            };

            fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newProduct)
            }).then(() => {
                document.getElementById('addProductForm').reset();
                loadProducts();
            });
        });

        window.onload = loadProducts;
    </script>
</body>
</html>
